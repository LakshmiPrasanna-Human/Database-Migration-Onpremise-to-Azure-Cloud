
Approach for Small Database Migration:

1. Run Data Migration Assist with On premise data and see all issues and get it corrected. 
2. Create Azure SQL database.
2. Use DACPAC for genaration which also includes data for small databases and run this in Azure sQL Servers.
3. Configure Azure Data sync or Data Replication for syncing live data from On premise to Azure SQL server.
4. Plan for cut off date and point applications to Azure SQL database. Need to verify Azure SQL database to be ready with latest schema
   and data.

Approach for Large Database Migration:

1. Run Data Migration Assist with On premise data and see all issues and get it corrected. 
2. Create Azure SQL database.
2. Use DACPAC for genaration which also includes data for small databases and run this in Azure sQL Servers.
3. Configure Azure Data sync or Data Replication for syncing live data from On premise to Azure SQL server.
4. Plan for cut off date and point applications to Azure SQL database. Need to verify Azure SQL database to be ready with latest schema
   and data.

   

Approach1: Azure Database Migration Service
Details: You can use Azure Database Migration Service to migrate the databases from an on-premises SQL Server instance to Azure SQL Database.
          It does this in online and offline migration. 
          Offline Migration: application downtime starts when the migration starts. That means both On premise and Azure SQL servers would not be available to use.
          Online Migration: online option allows you to keep the on-premises database and the Azure SQL Database continuously synchronizing after you have moved the initial schema/data. 
          This way you have ample time for the Azure SQL Database to get caught up and then decide when to cut-over and start pointing your application to the Azure SQL Database.
          Report would be generated which would show list of fixes to be done on on premise database before migration starts.
 Limitations: 1. The base version of SQL Service is SQL server 2016 onwards.
              2. Temporal tables can not be migrated, will show errors. In case if needed should exlude in migration database and tables. Workaround available.
              3. If any triggers are enabled in onpremises database need to to disable triggers and perform data migration. In case of online migration we should consider
                  business use cases which would fail if triggers are disabled.
              4. Data would get truncated if size of the column is greater than 32KB.
              5. Time stamp columns cannot be migrated, there is no work around for this other than reaching to Microsoft support team.
 Recommandations: 
              1. Offline data transfer is suggested for databases which can take down time.
              2. Online data transfer is suggested for large volume databases.
              3. All the limitations listed must be taken care manually. 
              
 Approach2: Trasactional Replication
 Details: 1. If the central database is hosted on-premises or in Azure SQL VM, you can use transactional replication to distribute data.
          Azure SQL databases can be configured as push subscribers and replicate data from the publisher, the central database. 
          Transaction replication can only replicate data in one-way.
          2. Can add an Azure SQL Database as a subscriber to a transactional replication. This can let migrate the data and objects
             from your on-premises SQL Server to Azure SQL Database. We can only initiate this replication from a snapshot. 
          3. Similar to online migration for DMS, we can start  synching well before scheduled migration and when everything is synchronized, 
              decide when  can cut-over and re-point your applications to the azure sql database
       
  Limitatations: 1.  cannot restore backups.
                  2. Can replicate tables which only have primary keys.
                  
  Approach3: BACPAC
  Details: BACPAC is a file which contains containing the definitions for your database schema â€“  tables, view, stored procedures,  
           functions, and other database objects along with data.This single file stores the information in json format.
           This strategy is applicable to small databases. You can create a BACPAC file and import one using SSDT, sqlpackage.exe or SSMS.
  Limitations: Not suggested for large databases.
  
  Approach4: Data Migration Assist 
  Details: 1. Data Migration Assist will show all of the compatability isses, performance issues etc on the destination database, once its in run.
           2. Run tool to migrate data.
           
  
  
  
 




https://blog.pythian.com/five-ways-to-migrate-your-on-premises-sql-database-to-azure/
